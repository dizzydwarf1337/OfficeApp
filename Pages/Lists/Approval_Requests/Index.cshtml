@page
@model SmartItApp.Pages.Lists.Aproval_Requests.IndexModel

@{
    ViewData["Title"] = "Approval Requests";
}

<h1>Approval Requests</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<div style="display: flex; flex-wrap: wrap; justify-content: space-between;">
    <div class="container">
        <div class="row height d-flex justify-content-center align-items-center">
            <div class="col-md-6">
                <div class="form d-flex" style="margin-bottom:10px">
                    <form method="post" asp-page-handler="Find" class="d-flex w-100">
                        <input asp-for="SearchString" type="number" class="form-control form-input" placeholder="Search by Request ID">
                        <button class="btn btn-outline-dark mt-auto" style="margin-inline-start:10px" type="submit">Find</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.GetSortOrder("Id", Model.CurrentSortOrder)">
                        Request Id
                    </a>
                </th>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.GetSortOrder("LeaveRequest", Model.CurrentSortOrder)">
                        LeaveRequest ID
                    </a>
                </th>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.GetSortOrder("EmployeeId", Model.CurrentSortOrder)">
                        Employee ID
                    </a>
                </th>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.GetSortOrder("Approver", Model.CurrentSortOrder)">
                        Approver ID
                    </a>
                </th>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.GetSortOrder("Status", Model.CurrentSortOrder)">
                        @Html.DisplayNameFor(model => model.ApprovalRequest[0].Status)
                    </a>
                </th>
                <th>

                </th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ApprovalRequest)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LeaveRequest)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmployeeId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Approver)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @if (User.IsInRole("Supervisor"))
                        {
                            <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a>
                            <a asp-page = "./Delete" asp-route-id ="@item.Id">Delete</a>
                        }   
                        <a asp-page="./Details" asp-route-id="@item.Id">Details</a>
                    </td>
                    @if (item.Status != SmartItApp.Enums.RequestStatus.Approved.ToString())
                    {
                        <td>
                        <form method="post" asp-page-handler="ApproveRequest">
                            <input type="hidden" name="id" value="@item.Id" />
                                <button class="btn btn-success" type="submit">
                                Approve Request
                            </button>
                        </form>
                        </td>
                    }
                    @if (item.Status != SmartItApp.Enums.RequestStatus.Rejected.ToString())
                    {
                        <td>
                            <button type="button" class="btn btn-outline-danger" onclick="showRejectModal('@item.Id')">Reject Request</button>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="modal fade" id="rejectModal" tabindex="-1" aria-labelledby="rejectModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="rejectModalLabel">Reject Request</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="RejectRequest" id="rejectForm">
                    <input type="hidden" id="rejectRequestId" name="id" />
                    <div class="mb-3">
                        <label for="rejectReason" class="form-label">Reason for Rejection</label>
                        <textarea class="form-control" id="rejectReason" name="rejectReason" rows="3" required></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">Submit</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function showRejectModal(requestId) {
            var rejectModal = new bootstrap.Modal(document.getElementById('rejectModal'));
            document.getElementById('rejectRequestId').value = requestId;
            rejectModal.show();
        }
    </script>
}